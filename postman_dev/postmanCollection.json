{
  "info": {
    "name": "Gidekmi API - Complete Collection",
    "description": "Complete API collection for Gidekmi mobile application backend with Render.com deployment support",
    "version": "1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "base_url",
      "value": "https://gidekmi-api.onrender.com",
      "type": "string"
    },
    {
      "key": "api_version",
      "value": "v1",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "üè• System & Health",
      "item": [
        {
          "name": "Root Endpoint",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/",
              "host": ["{{base_url}}"],
              "path": [""]
            }
          }
        },
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/health",
              "host": ["{{base_url}}"],
              "path": ["health"]
            }
          }
        },
        {
          "name": "API Info",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api",
              "host": ["{{base_url}}"],
              "path": ["api"]
            }
          }
        },
        {
          "name": "API v1 Info",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/{{api_version}}",
              "host": ["{{base_url}}"],
              "path": ["api", "{{api_version}}"]
            }
          }
        }
      ]
    },
    {
      "name": "üîê Authentication",
      "item": [
        {
          "name": "Auth Info",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/{{api_version}}/auth",
              "host": ["{{base_url}}"],
              "path": ["api", "{{api_version}}", "auth"]
            }
          }
        },
        {
          "name": "1. Initiate Registration",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    console.log('‚úÖ Registration initiated successfully');",
                  "    console.log('üìß Check your email for OTP code');",
                  "} else {",
                  "    console.log('‚ùå Registration initiation failed');",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{test_email}}\",\n  \"password\": \"{{test_password}}\",\n  \"first_name\": \"Test\",\n  \"last_name\": \"User\",\n  \"phone\": \"+905551234567\",\n  \"language\": \"tr\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/{{api_version}}/auth/register/initiate",
              "host": ["{{base_url}}"],
              "path": ["api", "{{api_version}}", "auth", "register", "initiate"]
            }
          }
        },
        {
          "name": "2. Complete Registration",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.environment.set('access_token', response.access_token);",
                  "    pm.environment.set('refresh_token', response.refresh_token);",
                  "    pm.environment.set('user_id', response.user.id);",
                  "    console.log('‚úÖ Registration completed successfully');",
                  "} else {",
                  "    console.log('‚ùå Registration completion failed');",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{test_email}}\",\n  \"code\": \"{{otp_code}}\",\n  \"type\": \"email_verification\",\n  \"device_id\": \"postman-test-device\",\n  \"device_type\": \"web\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/{{api_version}}/auth/register/complete",
              "host": ["{{base_url}}"],
              "path": ["api", "{{api_version}}", "auth", "register", "complete"]
            }
          }
        },
        {
          "name": "Login with Password",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.environment.set('access_token', response.access_token);",
                  "    pm.environment.set('refresh_token', response.refresh_token);",
                  "    pm.environment.set('user_id', response.user.id);",
                  "    console.log('‚úÖ Login successful');",
                  "} else {",
                  "    console.log('‚ùå Login failed');",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{test_email}}\",\n  \"password\": \"{{test_password}}\",\n  \"device_id\": \"postman-login-device\",\n  \"device_type\": \"web\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/{{api_version}}/auth/login",
              "host": ["{{base_url}}"],
              "path": ["api", "{{api_version}}", "auth", "login"]
            }
          }
        },
        {
          "name": "Request OTP Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{test_email}}\",\n  \"device_id\": \"postman-otp-device\",\n  \"device_type\": \"web\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/{{api_version}}/auth/login/otp",
              "host": ["{{base_url}}"],
              "path": ["api", "{{api_version}}", "auth", "login", "otp"]
            }
          }
        },
        {
          "name": "Verify OTP (Login)",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.access_token) {",
                  "        pm.environment.set('access_token', response.access_token);",
                  "        pm.environment.set('refresh_token', response.refresh_token);",
                  "        pm.environment.set('user_id', response.user.id);",
                  "        console.log('‚úÖ OTP login successful');",
                  "    }",
                  "} else {",
                  "    console.log('‚ùå OTP verification failed');",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{test_email}}\",\n  \"code\": \"{{otp_code}}\",\n  \"type\": \"login\",\n  \"device_id\": \"postman-otp-device\",\n  \"device_type\": \"web\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/{{api_version}}/auth/verify-otp",
              "host": ["{{base_url}}"],
              "path": ["api", "{{api_version}}", "auth", "verify-otp"]
            }
          }
        },
        {
          "name": "Verify Email",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{test_email}}\",\n  \"code\": \"{{otp_code}}\",\n  \"type\": \"email_verification\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/{{api_version}}/auth/verify-otp",
              "host": ["{{base_url}}"],
              "path": ["api", "{{api_version}}", "auth", "verify-otp"]
            }
          }
        },
        {
          "name": "Refresh Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.environment.set('access_token', response.access_token);",
                  "    console.log('‚úÖ Token refreshed successfully');",
                  "} else {",
                  "    console.log('‚ùå Token refresh failed');",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refresh_token\": \"{{refresh_token}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/{{api_version}}/auth/refresh",
              "host": ["{{base_url}}"],
              "path": ["api", "{{api_version}}", "auth", "refresh"]
            }
          }
        },
        {
          "name": "Logout",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refresh_token\": \"{{refresh_token}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/{{api_version}}/auth/logout",
              "host": ["{{base_url}}"],
              "path": ["api", "{{api_version}}", "auth", "logout"]
            }
          }
        }
      ]
    },
    {
      "name": "üë§ User Profile",
      "item": [
        {
          "name": "Get Profile",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/{{api_version}}/user/profile",
              "host": ["{{base_url}}"],
              "path": ["api", "{{api_version}}", "user", "profile"]
            }
          }
        },
        {
          "name": "Get User Settings",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/{{api_version}}/user/settings",
              "host": ["{{base_url}}"],
              "path": ["api", "{{api_version}}", "user", "settings"]
            }
          }
        }
      ]
    },
    {
      "name": "üîß Testing",
      "item": [
        {
          "name": "Test Valid Token",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/{{api_version}}/user/profile",
              "host": ["{{base_url}}"],
              "path": ["api", "{{api_version}}", "user", "profile"]
            }
          }
        },
        {
          "name": "Test Invalid Token",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer invalid_token_here"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/{{api_version}}/user/profile",
              "host": ["{{base_url}}"],
              "path": ["api", "{{api_version}}", "user", "profile"]
            }
          }
        }
      ]
    }
  ]
}