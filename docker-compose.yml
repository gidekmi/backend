# docker-compose.yml
version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: gidekmi_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: gidekmi_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: gidekmi123
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - gidekmi_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d gidekmi_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: gidekmi_redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass gidekmi123
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - gidekmi_network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # pgAdmin Web UI
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: gidekmi_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@gidekmi.com
      PGADMIN_DEFAULT_PASSWORD: gidekmi123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - gidekmi_network
    depends_on:
      postgres:
        condition: service_healthy

  # RedisInsight (Modern Redis GUI)
  redis-insight:
    image: redis/redisinsight:latest
    container_name: gidekmi_redis_insight
    restart: unless-stopped
    ports:
      - "8001:5540"
    networks:
      - gidekmi_network
    depends_on:
      redis:
        condition: service_healthy

# Volumes for data persistence
volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local

# Network for inter-service communication
networks:
  gidekmi_network:
    driver: bridge